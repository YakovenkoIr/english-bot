# bot.py
import os
from groq import Groq
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

# -----------------------------
# ENV variables (–≤ Render –∞–±–æ –ª–æ–∫–∞–ª—å–Ω–æ)
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
GROQ_API_KEY = os.getenv("GROQ_API_KEY")

# –ë–µ–∑–ø–µ—á–Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ —Å—Ç–∞—Ä—Ç—ñ
if not TELEGRAM_TOKEN:
    raise SystemExit("‚ùå TELEGRAM_TOKEN not set in environment")
if not GROQ_API_KEY:
    raise SystemExit("‚ùå GROQ_API_KEY not set in environment")

# -----------------------------
# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è Groq –∫–ª—ñ—î–Ω—Ç–∞
client = Groq(api_key=GROQ_API_KEY)

# -----------------------------
# /start –∫–æ–º–∞–Ω–¥–∞
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [["A1", "B2", "C1"], ["Chat with AI ü§ñ"]]
    reply_markup = ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True)
    await update.message.reply_text("–ü—Ä–∏–≤—ñ—Ç! –û–±–µ—Ä–∏ —Ä—ñ–≤–µ–Ω—å –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—ó –∞–±–æ —Å–ø—Ä–æ–±—É–π —á–∞—Ç –∑ –®–Ü:", reply_markup=reply_markup)

# -----------------------------
# Chat –∑ Groq (LLaMA-3)
async def chat_ai(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_text = update.message.text

    try:
        response = client.chat.completions.create(
    model="llama3-8b-8192",  # –∞–±–æ —ñ–Ω—à–∞ –º–æ–¥–µ–ª—å, —è–∫—É —Ç–∏ –æ–±—Ä–∞–ª–∞
    messages=[
        {"role": "system", "content": "You are an English teacher. Always answer in English, briefly and simply."},
        {"role": "user", "content": user_text}
    ]
)
        answer = resp.choices[0].message.content
        await update.message.reply_text(answer)
    except Exception as e:
        # –ù–ï –≤–∏–≤–æ–¥–∏–º–æ –∫–ª—é—á—ñ —Ç—É—Ç ‚Äî —Ç—ñ–ª—å–∫–∏ —Ç–µ–∫—Å—Ç –ø–æ–º–∏–ª–∫–∏
        await update.message.reply_text("‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –∑—ñ –®–Ü: " + str(e))

# -----------------------------
def main():
    app = Application.builder().token(TELEGRAM_TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.Regex("Chat with AI ü§ñ"), chat_ai))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, chat_ai))

    print("‚úÖ Bot is running with Groq AI...")
    app.run_polling()

if __name__ == "__main__":
    main()



